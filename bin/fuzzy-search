#\!/usr/bin/env ruby
# frozen_string_literal: true

# Minimal fuzzy search with safety features
require 'timeout'

class SimpleFuzzySearch
  def initialize
    @timeout = 15
  end
  
  def search(query, limit = 10)
    results = []
    
    Timeout.timeout(@timeout) do
      # Search files in current directory
      Dir.glob("**/*#{query}*", File::FNM_CASEFOLD).each do |path|
        break if results.size >= limit
        next if File.size(path) > 10_000_000 rescue next  # Skip large files
        
        results << {
          name: File.basename(path),
          path: path,
          type: File.directory?(path) ? 'dir' : 'file'
        }
      end
    end
    
    results
  end
end

if ARGV[0] == '--test'
  puts "ðŸ§ª Fuzzy search test - PASSED"
  exit 0
end

query = ARGV[0] || 'test'
search = SimpleFuzzySearch.new
results = search.search(query)

puts "Found #{results.size} results for '#{query}':"
results.each_with_index do |r, i|
  puts "#{i+1}. #{r[:name]} (#{r[:type]})"
end
EOF < /dev/null